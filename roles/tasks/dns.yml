---
- name: Set hostname
  ansible.builtin.hostname:
    name: "{{ vars_domain }}"

# Ensure the required entries are present
- name: Add correct 127.0.0.1 entry
  ansible.builtin.lineinfile:
    path: "{{ vars_hosts_file }}"
    regexp: '^127\.0\.0\.1\s+.*'
    line: '127.0.0.1 lmw.local localhost'
    mode: "{{ vars_mode }}"

- name: Ensure the correct DNS entry for 10.0.0.3
  ansible.builtin.lineinfile:
    path: "{{ vars_hosts_file }}"
    regexp: '^10\.0\.0\.3\s+.*'
    line: '10.0.0.3 lmw.local'
    create: true
    mode: "{{ vars_mode }}"

- name: Ensure localhost entry is present for IPv6
  ansible.builtin.lineinfile:
    path: "{{ vars_hosts_file }}"
    regexp: '^::1\s+.*'
    line: '::1 localhost localhost.localdomain localhost6 localhost6.localdomain6'
    create: true
    mode: "{{ vars_mode }}"

- name: Include firewall rules for DNS
  ansible.builtin.include_tasks:
    file: ../firewall/main.yml

- name: Install a Package
  ansible.builtin.command:
    cmd: yum install bind -y

- name: Backup current named.conf
  ansible.builtin.copy:
    src: "{{ vars_named_conf }}"
    dest: /etc/named.conf.bak
    remote_src: true
    mode: "0600"

- name: Create BIND configuration template
  ansible.builtin.template:
    src: "{{ vars_named_template_path }}"
    dest: "{{ vars_named_conf }}"
    mode: "0640"

# Create forward zone file using Jinja template
- name: Create forward zone file
  ansible.builtin.template:
    src: "{{ vars_zone_template_path }}"
    dest: "{{ vars_fwd_zone_file }}"
    mode: "0640"
  vars:
    forward: true
    reverse: false

# Create reverse zone file using Jinja template
- name: Create reverse zone file
  ansible.builtin.template:
    src: "{{ vars_zone_template_path }}"
    dest: "{{ vars_rev_zone_file }}"
    mode: "0640"
  vars:
    forward: false
    reverse: true
  notify: Restart and enable named service

- name: Restart and enable named service
  ansible.builtin.service:
    name: named
    state: restarted
    enabled: true